version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: filmfolk-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-filmfolk}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-filmfolk_password}
      POSTGRES_DB: ${DB_NAME:-filmfolk}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-filmfolk}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - filmfolk-network

  # FilmFolk Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: filmfolk-api
    environment:
      APP_NAME: FilmFolk
      APP_PORT: 8080
      APP_ENV: ${APP_ENV:-production}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000}

      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-filmfolk}
      DB_PASSWORD: ${DB_PASSWORD:-filmfolk_password}
      DB_NAME: ${DB_NAME:-filmfolk}
      DB_SSLMODE: disable

      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ACCESS_TOKEN_TTL: ${JWT_ACCESS_TOKEN_TTL:-15}
      JWT_REFRESH_TOKEN_TTL: ${JWT_REFRESH_TOKEN_TTL:-7}

      TMDB_API_KEY: ${TMDB_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - "${APP_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - filmfolk-network

  # Database Migration Tool (run once)
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: filmfolk-migrate
    command: ./migrate
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-filmfolk}
      DB_PASSWORD: ${DB_PASSWORD:-filmfolk_password}
      DB_NAME: ${DB_NAME:-filmfolk}
      DB_SSLMODE: disable
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - filmfolk-network
    profiles:
      - tools

volumes:
  postgres_data:

networks:
  filmfolk-network:
    driver: bridge
